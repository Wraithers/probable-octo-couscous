services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:stable-e043ecf
    container_name: affine_server
    ports:
      - ${APP_PORT}:3010
    command: ["sh", "-c", "node ./scripts/self-host-predeploy && node ./dist/index.js"]
    depends_on:
      affine-redis:
        condition: service_healthy
      affine-postgres:
        condition: service_healthy
    volumes:
      # Custom configurations
      - ${APP_DATA_DIR}/data/config:/root/.affine/config
      # Blob storage
      - ${APP_DATA_DIR}/data/storage:/root/.affine/storage
    logging:
      driver: "json-file"
      options:
        max-size: "1000m"
    restart: unless-stopped
    environment:
      - NODE_OPTIONS="--import=./scripts/register.js"
      - NODE_ENV=production
      - AFFINE_CONFIG_PATH=/root/.affine/config
      - REDIS_SERVER_HOST=affine-redis
      - DATABASE_URL=postgresql://affine:${AFFINE_POSTGRES_PASSWORD}@affine-postgres:5432/affine
      - AFFINE_ADMIN_EMAIL=${AFFINE_ADMIN_EMAIL}
      - AFFINE_ADMIN_PASSWORD=${AFFINE_ADMIN_PASSWORD}
      - TELEMETRY_ENABLE=${AFFINE_TELEMETRY_ENABLE}
      - AFFINE_INDEXER_ENABLED=false
      - AFFINE_SERVER_EXTERNAL_URL=https://projects.int.hotcinnamon.ing
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: true

  affine-redis:
    image: redis
    container_name: affine-redis
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: true

  affine-postgres:
    image: pgvector/pgvector:pg16
    container_name: affine-postgres
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        ['CMD', 'pg_isready -d postgres://affine:affine@affine-postgres:5432/affine']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: affine
      POSTGRES_PASSWORD: ${AFFINE_POSTGRES_PASSWORD}
      POSTGRES_DB: affine
      POSTGRES_INITDB_ARGS: '--data-checksums'
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: true
